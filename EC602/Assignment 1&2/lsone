#!/usr/bin/env python
# Copyright 2021 Xiaopeng Huang xphuang@bu.edu

import os, string

files = os.listdir()

thelowerletters = string.ascii_lowercase
theupperletters = string.ascii_uppercase
thedigits = string.digits

def ignore_all(x, keep_these=thelowerletters+theupperletters+thedigits+'$'):
    # ignore symbols
    keepers = [let for let in x if let in keep_these]
    # ignore capitalization
    lower_keepers = [str.lower(let) for let in keepers]
    return "".join(lower_keepers)

def ignore_symbols(x, keep_these=thelowerletters+theupperletters+thedigits+'$'):
    # ignore symbols
    keepers = [let for let in x if let in keep_these]
    return "".join(keepers)

def capitalization_sort(x):
    # still need to ignore the symbols and sort by capitalization
    x = ignore_symbols(x, keep_these=thelowerletters+theupperletters+thedigits+'$')
    x_order = ''
    for let in x:
        order = ord(let)
        # sort uppercase after lowercase
        if 64 < ord(let) < 91:
            order = ord(let) + 33
        x_order += str(order)
    return x_order

def symbols_sort(x):
    x_order = ''
    for let in x:
        order = ord(let)
        # symbols after digits/letters in ASCII format should be order-changed
        if 31 < order < 36:
            order = ord(let) - 22
            x_order += '0'+str(order)
        if 36 < order < 48:
            order = ord(let) - 22
            x_order += '0'+str(order)
        if 57 < order < 65:
            order = ord(let) - 32
            x_order += '0'+str(order)
        if 90 < order < 97:
            order = ord(let) - 58
            x_order += '0'+str(order)
        if 122 < order < 127:
            order = ord(let) - 84
            x_order += '0'+str(order)
        x_order += str(order)
    return x_order

def complicated(x):
    return(ignore_all(x, keep_these=thelowerletters+theupperletters+thedigits+'$'), capitalization_sort(x), symbols_sort(x), x)

files.sort(key = complicated)

# hidden files
for file in files:
    if file[0] != '.':
        print(file)
